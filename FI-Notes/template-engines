A better way to add and manipulate chunks of the DOM is by using templates that provide a way to dynamically
add data on a set HTML structure

LODASH
A JavaScript library that provide a lot of utilities for working with arrays, objects and strings
Can add simple form and placeholder for comments to be displayed

*template engine index.html file*
<!DOCTYPE html>
<html>
  <head>
    <title>JavaScript lodash Templates</title>
  </head>
  <body>
    <article>
      <header><h2>The Results are In!</h2></header>
      <p>
        After careful consideration and a generous grant from NASA, our team has determined that a woodchuck could chuck five wood, with a standard deviation of +/- .37 wood.
      </p>
      <footer>posted by Chuck Wooden</footer>
      //form and placeholder
      <form onsubmit="postComment();return false;">
        Name: <input type="text" id="commenterName"><br>
        Comment: <input type="textarea" id="commentText"><br>
        <input type="submit">
      </form>
      <div id="comments"></div>
    </article>
    <script src="lodash.min.js"></script>
    <script src="index.js"></script>
  </body>
</html>
This provides input field for name and comments


Add postComment() function in .js file
function postComment() {
  let commenter = document.getElementById("commenterName").value;
  let comment = document.getElementById("commentText").value;
  //insert comment into "comments" div in this format:
  //<div class="comment"><p>comment</p><p>Posted By: <span class="commenter">commenter</span></p></div>

  //Use delimiter <%= %> to interpolate strings
  let commentTemplate = '<div class="comment"><p><%= comment %></p><p>Posted By: <span class="commenter"><%= commenter %></span></p></div>';

  //create template function to turn template string into a function
  let templateFn = _.template(commentTemplate);

  let commentsDiv = document.getElementById("comments");

  //execute template function with JSON object for the interpolated values
  let templateHTML = templateFn({ 'comment': comment, 'commenter': commenter });

  //append rather than replace!
  commentsDiv.innerHTML += templateHTML;
}
This works with entering, submitting and adding new data from form


HTML TEMPLATES IN JAVASCRIPT
Putting templates in a string is not great for reasons of:
  -it's not readable
  -not indented structure of regular HTML
  -don't get syntax of highlighting tags the editor provides
Can use a special <script> tag with content-type of 'text/x-lodash-template' to embed HTML directly inside

<!-- index.html, place before end body tag -->
<body...>
  <article>...</article>
  <script id="comment-template" type="text/x-lodash-template">
    <div class="comment">
      <div class="comment-body"><%= comment %></div>
      <div class="commenter">
        <p>
          <span class="posted-by">Posted By: </span>
          <%= commenter %>
        </p>
      </div>
    </div>
  </script>
</body>


ESCAPING HTML DATA
Can prevent commenters to use markup HTML in their comments
Change delimiter <%= %> to escape <%- %>
<script id="comment-template" type="text/x-lodash-template">
  <div class="comment">
    <div class="comment-body"><%- comment %></div>
    <div class="commenter">
      <p>
        <span class="posted-by">Posted By: </span>
        <%- commenter %>
      </p>
    </div>
  </div>
</script>


EXECUTING CODE
To execute non-printing JavaScript we use eval delimiter <% %>
<div class="commenter">
  <p>
    <span class="posted-by">Posted By: </span>
    <% if(commenter !== '') { %>
    <%= commenter %>
    <% } else { %>
    Anonymous
    <% } %>
  </p>
</div>
Provides 'Anonymous' if author left field blank
