WHY HANDELBARS?
-Logic-less template engine dynamically generating the HTML page
-Adds minimal logic due to helpers
 eg: if, with, unless, each, etc

-Can be loaded into browser like any other JS file
 eg: <script src='/path/to/handlebars.min.js'></script>

PROS OF USING HANDLEBARS
-Keeps HTML page clean while separating logic-less templates from actual logic in JS files which improves
 structure of application along with its maintainability and scalability
-Simplifies task of manually updating data on the view
-Uses popular frameworks and platforms such as Ember.js, Meteor.js and Ghost

HOW IT WORKS
           Handlebars
            compiler            {'name': 'Malind Kowalski'}
  TEMPLATE  ------>   FUNCTION()      <------------>
Name : {{name}}           |        Argument/Data/Context
                          |
                  ---------
                  |
                  |
                HTML
         Name: Malind Kowalski

1. The variable {{name}} declared in the template is compiled with Handlebars into a function
2. This function executes by passing JSON obj as argument which contains the value of the variable {{name}}
   used in template
3. The function then returns the HTML after replacing the variable {{name}} with its value 'Malind Kowalski'

TEMPLATES
-Can be written both in an HTML file or separately
-With HTML they appear in <script>
 eg: <script id='handlebars-demo' type='text/x-handlebars-template'>
        <div>
          //code stuff in here
        </div>
     </script>

-First in JS file, template needs to be retrieved from the HTML document
-Once it is retrieved the it can be compiled by Handlebars.compile() which returns a function
 (steps 1-3 from How It Works)
