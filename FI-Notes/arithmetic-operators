MATH IS AWESOME!!!

JavaScript represents everything(number) as float

OPERATORS
-Addition(+): concatenate strings and also adds numbers togethers
 eg:
 'High ' + 5 + '!!!' => "High 5!!!"
 3+3 => 6

-Subtraction(-): returns difference between two numbers
  eg: 90-30 => 60

-Multiplication(*): returns product of two numbers
 eg: 18*3 => 54


-Division(/): returns numerical value of how many times the number on the right can fit into the number
 on the left of the operator
 eg: 189/3 => 63 *3 can fit into 189, 63 times*

-Remainder(%): returns remaining value when a number is divided by the right number
 eg: 9001%42 => 13
 explained:
 1. 9001/42 => 214.31
 2. 42*214 => 8999
 3. 9001-8999 => 13 *13 is the remaining value*

-Exponent(**): returns left number raised to the power of the right number
 eg: 12**3 => 1728
 explained 12*12 => 144, 144*12 => 1728

ODER OF OPERATIONS
1. Any parenthesis has highest priority
2. Exponentiation is second priority
3. Multiplication, division and remainder
4. Addition and subtraction lastly

() > ** > */% > +-

eg:
2 - (2 % 2) + (2 / 2 ** 2) * 2 => 3

2 - (2 % (2+2) / 2**2) * 2 => 1

INCREMENTING AND DECREMENTING
-Increment(++): increments the number by 1, if ++ comes after variable then variable's value is returned
 first then incremented
 eg:
 let counter = 0 => undefined
 counter++ => 0
 counter => 1

-If ++ comes before variable, the variable's value is incremented first then returned
 eg:
 let counter = 0
 ++counter => 1
 counter => 1

-Both cases, counter returns value of 1 after incrementing, it's a matter of whether the operation should
 return original or incremented value

-Decrement(--): decrements the number by 1 and has same pair of prefix/postfix options as ++
 eg:
 let counter = 0
 counter-- => 0
 counter => -1

 --counter => -2
 counter => -2

ASSIGNMENT OPERATORS
-Most basic assign operator in JavaScript is =
-Can couple = with arithmetic operator to perform operation AND assign value
 eg:
 let counter = 0 => undefined
 counter += 10 => 10
 counter -= 2 => 8
 counter *= 4 => 32
 counter /= 2 => 16
 counter %=6 => 4
 counter **=3 => 64
