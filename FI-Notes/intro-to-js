JAVACRIPT LANGUAGE AND ITS USES
-JavaScript commonly abbreviated to JS: programming language of the web, along side HTML and CSS
-Creates virtually all the web pages/apps uses interact with(Google, FB, Wikipedia, Netflix, Zara, etc)

-HTML: HyperText Markup Language: provides content structure, arranged in nested-tree form, allowing markup
 of content with attributes like id and class
-CSS: Cascading Style Sheets: adds styling to a page, allowing customization via id and class attrs, in order
 to access elements wanted to

JAVASCRIPT
-Does practically everything else, handling most of dynamic behavior of website
 eg: reacting to events(clicking button, hovering over a link, etc, accessible via id/class attrs)
-Changes page content without reloading, executing requests in the background
-JS is fundamental and prominent for modern user/web interaction
-One of the most popular languages in the world
-Only programming language able to run in every major browser
  -HTML is a markup language and CSS is a style sheet language
-Flexible to allow different programming styles: functional and OOP

JS HISTORY
-First version of JS built in 1995 with JS developments around 2000 but very similar to JS Dev in mid 90's
-AJAX: Asynchronous JavaScript and XML: process of making requests for additional data
-Standard/Modernization: AJAX helps provide useful functionality but JS was still difficult to program
 -Due to different browsers implementing different features in different ways, developers decided and agreed
 upon a standardization
-ES5(5th versions) known as ECMAScript(official JS name) releases in 2009
-Harmonization is great but JS still lacked modern language features compared to standards like PHP, Java, C
 Python and Ruby
 -JS addressed concerns with ES6 and ES2016/2017 bringing additional modern features

COMPILATION AND JAVASCRIPT
-JavaScript derives from a marketing scheme: when Java was popular in 1995 but the 2 languages share little
 in common such as some syntax borrowed from Java, nothing more
-Unlike Java, JS doesn't need to be compiled, written code in a JS file is the exact same code in browser
-Java allows writing code in human-readable format then a compiler translates that code into a
 machine-readable code
 - This then makes it difficult to open up application's source code
-Compiling JS can be done, opening a source code is doable and readable with JS

WRITE JS IN CHROME DEV TOOLS CONSOLE
-Every browser comes with built-in dev tools to inspect, modify and debug web page content
-Open chrome dev tools via Ctrl+Shift+I or J(Linux/Windows) and Cmd+Opt+I or J(Mac)
  *i have always only used ctrl+shift+i or F12, +j is new to me*
-Console in a browser environment to type and run arbitrary JS code
-Sandboxed: the only resources the console has access to is the current loaded page
-Console is single best tool for debugging JS code

-Coding: In console type (number) + (another number) then enter
 eg: > 3+3, enter, <- 6
 *this is a JS expression, any valid unit of code that returns a value*
 eg: classic phrasing with quotes
  > 'Howdy Cowboy', enter <- "Howdy Cowboy"

-Debugging: JS provides a number of built-in features to help build and debug applications
 eg: alert() function
 > alert('you are beautiful or whatever alert you want in here'), enter
 a window will appear with the website-url says: you are beautiful

JS SYNTAX AND BEST PRACTICES
-Semicolons: ending each statement with ; is optional

-JS engine passes over the same code at least 3 times
  1. passing code to parse syntax of code
  -engine takes process of automatic semicolon insertion: will automatically insert ; for us therefore making
   ; optional
  -; ARE part of JS syntax, good practice though
  2. passes code to initialize varaibles/functions and stores them in memory
  3. passes code to actually execute code line-by-line

ESTABLISHING GOOD JS HABITS
-True education of knowing JS is to write a lot of JS code
-Always have browser console open to play with code, familiarize with code and errors
-code code code code code code code
