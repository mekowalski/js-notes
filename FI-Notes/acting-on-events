Programming means that you can create such a world for other people

UPDATE ELEMENT'S POSITION
In browser console, get a hold of 'dodger'
var dodger = document.getElementById('dodger')

Then change its color
dodger.style.backgroundColor = '#000000'
*turns dodger black*

dodger.style.backgroundColor = '#FF69B4'
*turns dodge pink*

Accessing style property of dodger element, can change height, width, backgroundColor etc

To change positions of element we begin with bottom left of black box coordinates (0, 0)
dodger current postion:
dodger.style.left //180px
dodger.style.bottom //0px

move dodger up
dodger.style.bottom = '100px'
*dodger moved up 100 pixels*


MOVE IN RESPONSE TO AN EVENT
Can use event listeners to respond to an event and move the dodger
First we need to figure out the left arrow key's numeric value

document.addEventListener('keydown', function(e) {
  console.log(e.which)
})
*key down on the arrows to find numeric value*

Start moving left
document.addEventListener('keydown', function(e) {
  if (e.which === 37) {  //if we catch a left arrow, move dodger left 1 px
    var leftNumbers = dodger.style.left.replace('px', '')
    var left = parseInt(leftNumbers, 10)

    dodger.style.left = `${left - 1}px`
  }
})
*this will not help dodger stay in black box though*

Need to break dodger's movement to a separate function and insure dodger has not gone past left edge of
black box
var dodger = document.getElementById('dodger')

function moveDodgerLeft() {
  var leftNumbers = dodger.style.left.replace('px', '')
  var left = parseInt(leftNumbers, 10)

  if (left > 0) {
    dodger.style.left = `${left - 1}px`
  }
}

Does now allow dodger to move past left edge
document.addEventListener('keydown', function(e) {
  if (e.which === 37) {
    moveDodgerLeft()
  }
})
