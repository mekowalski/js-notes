Common Array Methods

var dogs = ['Caroga', 'Titan']

-Push, adds new element to an array
dogs.push('Chief');
console.log(dogs);
return => ["Caroga", "Titan", "Chief"]

-Pop, removes last element and returns that element
console.log(dogs.pop());
return => Chief
console.log(dogs)
return => ["Caroga", "Titan"]

-Concat, combines two arrays
-Doesn't affect original array
var owners = ['Malind', 'Ryan']
console.log(dogs.concat(owners));
return => ["Caroga", "Titan", "Malind", "Ryan"]

-Join, joins all elements in array to create string
-Doesn't modify original array
console.log(dogs.join('!'));
return => Caroga!Titan

-Reverse, reverses elements in array
console.log(dogs.reverse());
return => ["Titan", "Caroga"]

-Shift, remove first element in array and return element
-Modifies array
dogs.shift();
return => "Titan" (using dog array after reverse method)

-Unshift, adds element to start of array and returns length of modified array
dogs.unshift('Chief');
return => 2
dogs => (2) ["Chief", "Caroga"]

-Slice, select part of array and return that selection leaving original array unchanged
-Accepts 2 arguments, start and end minus 1
dogs.slice(1, 2);
return => ["Caroga"]

-Sort, sorts an array, numerically or alphabetically
-Modifies original array
dogs.sort();
return => ["Caroga", "Chief"]

-Splice, similar to slice but modifies original array
-Arguments are start index, number of items to count from starting point to remove & any item to add in array
after element push into array
dogs = ["Caroga", "Chief", "Titan"]
dogs.splice(1, 2, 'I am writing JS notes');
return => ["Chief", "Titan"] (2 removed items)
dogs => (2) ["Caroga", "I am writing JS notes"]
